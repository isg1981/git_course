Git

1) git init 
"""git init se utiliza para inicializar una carpeta de working directory"""

2) git status para ver el status de la branch o commits

3) git add . 
"""para subir los cambios al área de preparación, también conocida como el índice.
El área de preparación es un espacio intermedio entre el directorio de trabajo y el repositorio Git, donde se pueden
seleccionar los cambios específicos que se desean incluir en el próximo commit. Se hacer git add nombre-archivo solo
para addeitear ese archivo especifico"""

4) git commit -m "la descripción del commit"

5) git log
"""muestra los commits generados y el numero de commit"""

6) git branch
"""muestra las branches que se tienen""" 

6*) git branch nueva-branch
"""genera una nueva branch pero no se para en ella"""

7*) git checkout nombre-branch
"""Se para en la branch nombre-branch"""

7) git checkout -b nombre-nueva-branch
"""genera una nueva branch y se para en ella"""

8) git checkout 80be5d0edacba3ab20b41e0dfaeb94ce8e6bda61
"""el código del checkout nos permite pasar a commits anteriores y ver esos cambios"""

9) git checkout master
"""Además de permitir pasar a la branch master, nos permite volver a los últimos commits"""

10) git switch nombre-branch
"""cambia de branch, también hace lo mismo que git checkout pero la diferencia es que es especifico de branchs,
mientras checkout es para branchs y commits"""

11) git switch -c nueva-branch
"""Hace lo mismo que git checkout -b, crea una nueva branch y se para en ella."""

12) git ls-files
"""Me muestra todos los archivos que tiene la branch, incluso si fueron borrados."""

13) git rm nombre-file
"""borra un archivo, luego hacer git commit -m "" y se gerea un commit de borrado del archivo."""

14) git revert HEAD~1..HEAD
"""Me revierte el último commit, en este caso el borrado del archivo. En caso de hacer git revert HEAD~2..HEAD
me revierte a 2 commits anteriores. Para salir de la pantalla de git revert se coloca :q!"""







El último commit en cada branch es lo que se denomina head 